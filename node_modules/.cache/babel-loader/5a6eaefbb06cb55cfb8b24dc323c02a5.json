{"ast":null,"code":"var _jsxFileName = \"/Users/saadamirpk/Documents/GitHub/space-explore/src/Pages/StarlinkPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport HeroSectionSimple from \"../Components/HeroSectionSimple\";\nimport starback from \"../Images/starlink-back.jpg\";\nimport { MapContainer, CircleMarker, TileLayer, Tooltip } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StarlinkPage() {\n  _s();\n\n  const [starLinkData, setStarLinkData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    (async () => {\n      await fetchStars();\n    })();\n  }, []);\n  useEffect(() => {\n    console.log(starLinkData);\n  }, [starLinkData]);\n\n  async function fetchStars() {\n    fetch(\"https://api.spacexdata.com/v4/starlink\").then(res => res.json()).then(res => {\n      setStarLinkData(res);\n      setLoading(false);\n    });\n  }\n\n  const DisplayMarkers = starLinkData.map(satellite => {\n    if (satellite.latitude === null || satellite.longitude === null) {\n      return;\n    }\n\n    return /*#__PURE__*/_jsxDEV(CircleMarker, {\n      center: [satellite.latitude, satellite.longitude],\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        direction: \"right\",\n        offset: [-8, -2],\n        opacity: 1,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"hEY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HeroSectionSimple, {\n      cover: starback,\n      title: \"Starlink\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      component: \"h2\",\n      color: \"white\",\n      align: \"center\",\n      marginTop: 10,\n      children: [\"A Live Map of all \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }, this), \" StarLink Satellites will be added here\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      style: {\n        height: \"480px\",\n        width: \"100%\"\n      },\n      zoom: 1,\n      center: [-0.09, 51.505],\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), !loading && /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StarlinkPage, \"6CHyviSlM7191sw2G49gK8qTrdQ=\");\n\n_c = StarlinkPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StarlinkPage\");","map":{"version":3,"names":["Typography","React","useEffect","useState","HeroSectionSimple","starback","MapContainer","CircleMarker","TileLayer","Tooltip","StarlinkPage","starLinkData","setStarLinkData","loading","setLoading","fetchStars","console","log","fetch","then","res","json","DisplayMarkers","map","satellite","latitude","longitude","height","width"],"sources":["/Users/saadamirpk/Documents/GitHub/space-explore/src/Pages/StarlinkPage.jsx"],"sourcesContent":["import { Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport HeroSectionSimple from \"../Components/HeroSectionSimple\";\nimport starback from \"../Images/starlink-back.jpg\";\nimport { MapContainer, CircleMarker, TileLayer, Tooltip } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nexport default function StarlinkPage() {\n  const [starLinkData, setStarLinkData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      await fetchStars();\n    })();\n  }, []);\n\n  useEffect(() => {\n    console.log(starLinkData);\n  }, [starLinkData]);\n\n  async function fetchStars() {\n    fetch(\"https://api.spacexdata.com/v4/starlink\")\n      .then((res) => res.json())\n      .then((res) => {\n        setStarLinkData(res);\n        setLoading(false);\n      });\n  }\n\n  const DisplayMarkers = starLinkData.map((satellite) => {\n    if (satellite.latitude === null || satellite.longitude === null) {\n      return;\n    }\n    return (\n      <CircleMarker center={[satellite.latitude, satellite.longitude]}>\n        <Tooltip direction=\"right\" offset={[-8, -2]} opacity={1}>\n          <span>hEY</span>\n        </Tooltip>\n      </CircleMarker>\n    );\n  });\n\n  return (\n    <div>\n      <HeroSectionSimple cover={starback} title=\"Starlink\" />\n      <Typography\n        variant=\"h2\"\n        component={\"h2\"}\n        color=\"white\"\n        align=\"center\"\n        marginTop={10}\n      >\n        A Live Map of all <br /> StarLink Satellites will be added here\n      </Typography>\n      <br />\n      <br />\n      <MapContainer\n        style={{ height: \"480px\", width: \"100%\" }}\n        zoom={1}\n        center={[-0.09, 51.505]}\n      >\n        <TileLayer url=\"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n        {!loading && <p></p>}\n      </MapContainer>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,SAArC,EAAgDC,OAAhD,QAA+D,eAA/D;AACA,OAAO,0BAAP;;AAEA,eAAe,SAASC,YAAT,GAAwB;EAAA;;EACrC,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,MAAMa,UAAU,EAAhB;IACD,CAFD;EAGD,CAJQ,EAIN,EAJM,CAAT;EAMAb,SAAS,CAAC,MAAM;IACdc,OAAO,CAACC,GAAR,CAAYN,YAAZ;EACD,CAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;;EAIA,eAAeI,UAAf,GAA4B;IAC1BG,KAAK,CAAC,wCAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;MACbR,eAAe,CAACQ,GAAD,CAAf;MACAN,UAAU,CAAC,KAAD,CAAV;IACD,CALH;EAMD;;EAED,MAAMQ,cAAc,GAAGX,YAAY,CAACY,GAAb,CAAkBC,SAAD,IAAe;IACrD,IAAIA,SAAS,CAACC,QAAV,KAAuB,IAAvB,IAA+BD,SAAS,CAACE,SAAV,KAAwB,IAA3D,EAAiE;MAC/D;IACD;;IACD,oBACE,QAAC,YAAD;MAAc,MAAM,EAAE,CAACF,SAAS,CAACC,QAAX,EAAqBD,SAAS,CAACE,SAA/B,CAAtB;MAAA,uBACE,QAAC,OAAD;QAAS,SAAS,EAAC,OAAnB;QAA2B,MAAM,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAnC;QAA6C,OAAO,EAAE,CAAtD;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAOD,CAXsB,CAAvB;EAaA,oBACE;IAAA,wBACE,QAAC,iBAAD;MAAmB,KAAK,EAAErB,QAA1B;MAAoC,KAAK,EAAC;IAA1C;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,UAAD;MACE,OAAO,EAAC,IADV;MAEE,SAAS,EAAE,IAFb;MAGE,KAAK,EAAC,OAHR;MAIE,KAAK,EAAC,QAJR;MAKE,SAAS,EAAE,EALb;MAAA,8CAOoB;QAAA;QAAA;QAAA;MAAA,QAPpB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAWE;MAAA;MAAA;MAAA;IAAA,QAXF,eAYE;MAAA;MAAA;MAAA;IAAA,QAZF,eAaE,QAAC,YAAD;MACE,KAAK,EAAE;QAAEsB,MAAM,EAAE,OAAV;QAAmBC,KAAK,EAAE;MAA1B,CADT;MAEE,IAAI,EAAE,CAFR;MAGE,MAAM,EAAE,CAAC,CAAC,IAAF,EAAQ,MAAR,CAHV;MAAA,wBAKE,QAAC,SAAD;QAAW,GAAG,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QALF,EAMG,CAACf,OAAD,iBAAY;QAAA;QAAA;QAAA;MAAA,QANf;IAAA;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD;;GA5DuBH,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}